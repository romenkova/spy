{"version":3,"sources":["Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Card","children","onClick","className","useState","flipped","setFlipped","setTimeout","Cards","roles","onFinish","currentIndex","location","map","isSpy","i","length","getRandom","min","max","Math","floor","random","createRoles","count","spyIndex","Array","keys","_v","getLocation","index","locations","App","areCardsShowing","setAreCardsShowing","setCount","setRoles","setLocation","setCurrentIndex","reset","useEffect","type","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33aefad3.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction Card({ children, onClick, className }) {\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <div\n      onClick={() => {\n        if (!flipped) setFlipped(true);\n        else {\n          setFlipped(false);\n          setTimeout(() => {\n            onClick();\n          }, 500);\n        }\n      }}\n      className={`flip-card ${className} ${flipped ? 'flip-card_flip' : ''}`}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction Cards({ roles, onClick, onFinish, currentIndex, location }) {\n  return (\n    <div className=\"cards\">\n      {roles.map((isSpy, i) => (\n        <Card\n          key={`${isSpy}_${i}`}\n          onClick={() => {\n            if (i === roles.length - 1) onFinish();\n            else onClick();\n          }}\n          className={`${isSpy ? 'card_spy' : ''} ${\n            currentIndex === i ? 'card_current' : ''\n          }`}\n        >\n          <div className=\"flip-card-inner\">\n            <div className=\"flip-card-front\">?</div>\n            <div className=\"flip-card-back\">\n              {isSpy ? <div>üòà</div> : <div>üòá <div className=\"location\">{location}</div></div>}\n            </div>\n          </div>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default Cards;\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Cards from './Cards';\nimport locations from './locations.json'\n\nfunction getRandom(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction createRoles(count) {\n  const spyIndex = getRandom(0, +count);\n\n  return [...Array(+count).keys()].map((_v, i) =>\n    i === spyIndex ? true : false\n  );\n}\n\nfunction getLocation() {\n  const index = getRandom(0, locations.length - 1)\n  return locations[index]\n}\n\nfunction App() {\n  const [areCardsShowing, setAreCardsShowing] = useState(false);\n  const [count, setCount] = useState(5);\n  const [roles, setRoles] = useState([]);\n  const [location, setLocation] = useState('')\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const reset = () => {\n    setAreCardsShowing(false);\n    setRoles(createRoles(count));\n    setCurrentIndex(0);\n    setLocation(getLocation())\n  };\n\n  useEffect(() => {\n    setLocation(getLocation())\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Spy üéÆ</h1>\n      {areCardsShowing ? (\n        <>\n          <Cards\n            onFinish={() => {\n              reset();\n            }}\n            roles={roles}\n            currentIndex={currentIndex}\n            onClick={() => setCurrentIndex((i) => i + 1)}\n            location={location}\n          />\n          <button\n            onClick={() => {\n              reset();\n            }}\n          >\n            –ó–∞–Ω–æ–≤–æ\n          </button>\n        </>\n      ) : (\n        <div>\n          <div>\n            <div className=\"title\">{count} –∏–≥—Ä–æ–∫–æ–≤</div>\n            <input\n              type=\"range\"\n              min={0}\n              max={15}\n              value={count}\n              onChange={({ target }) => setCount(target.value)}\n            />\n          </div>\n          <button\n            onClick={() => {\n              setAreCardsShowing(true);\n              setRoles(createRoles(count));\n            }}\n          >\n            –ó–∞–ø—É—Å—Ç–∏—Ç—å\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}